name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

permissions:
  contents: write

jobs:
  go-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.go-version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - id: go-version
        run: echo "::set-output name=version::$(cat ./.go-version)"
  release-notes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Generate Release Notes
        run: sed -n -e "1{/# /d;}" -e "2{/^$/d;}" -e "/# $(git describe --abbrev=0 --exclude="$(git describe --abbrev=0 --match='v*.*.*' --tags)" --match='v*.*.*' --tags | tr -d v)/q;p" CHANGELOG.md > release-notes.txt
      - uses: actions/upload-artifact@v2
        with:
          name: release-notes
          path: release-notes.txt
          retention-days: 1
  # terraform-provider-release:
  #   name: 'Terraform Provider Release'
  #   needs: [go-version, release-notes]
  #   uses: hashicorp/ghaction-terraform-provider-release/.github/workflows/community.yml@v1
  #   secrets:
  #     gpg-private-key: '${{ secrets.GPG_PRIVATE_KEY }}'
  #   with:
  #     release-notes: true
  #     setup-go-version: '${{ needs.go-version.outputs.version }}'
  terraform-provider-release:
    needs: [go-version, release-notes]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2
        with:
          go-version: '${{ needs.go-version.outputs.version }}'
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: '${{ secrets.GPG_PRIVATE_KEY }}'
      - id: release-notes-download
        name: Release Notes Download
        uses: actions/download-artifact@v2
        with:
          name: release-notes
          path: /tmp
      - name: goreleaser release (with release notes)
        uses: goreleaser/goreleaser-action@v2
        with:
          args: release --release-notes ${{ steps.release-notes-download.outputs.download-path }}/release-notes.txt --rm-dist ${{ inputs.goreleaser-release-args }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
